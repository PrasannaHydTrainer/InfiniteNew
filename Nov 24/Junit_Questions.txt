
The method which annotated w.r.t. @BeforeClass must be static and will be executed only once in entire testing phase

Predicting Output : 
________________________

package com.hexaware.trainer;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertEquals;
import org.junit.After;  
import org.junit.AfterClass;  
import org.junit.Before;  
import org.junit.BeforeClass;

import org.junit.Test;


public class DemoTest {

    static Demo obj;

    @BeforeClass 
    public static void setUp() {
        obj = new Demo();
        System.out.println("Global Object Created...");
    }

    @AfterClass 
    public static void cleanUp() {
        obj = null;
        System.out.println("Object Deallocated...");
    }

    @Before 
    public void showInfo() {
        System.out.println("Test Case Started...");
    }

    @After 
    public void clearInfo() {
        System.out.println("Test Case Ended...");
    }
    
    @Test 
    public void testSayHello() {
        // Demo obj = new Demo();
        assertEquals("Welcome to Junit...", obj.sayHello());
    }

    @Test 
    public void testSum() {
        // Demo obj = new Demo();
        assertEquals(5, obj.sum(2,3));
    }

    @Test 
    public void testMax3() {
        // Demo obj = new Demo();
        assertEquals(5, obj.max3(2,3,5));
    }
}

______________________________________________________________________

@BeforeClass annotation will be executed only once in entire testing phase and will be executed
before starting testing.

@AfterClass annotationn will be executed only once in entire testing phase and will be executed
before closing testing. 

@Before annotation method will be executed for each and every test case. Means if you have 3 test cases before test cases this method will execute so 3 times it will execute before testing. 

@After annotation method will be executed for reach and every test case ending. means if you have 3 test cases, the code will run 3 times. 

_____________________________________________


public void before() {
    System.out.println("before");
   }
   @After 
   public void after() {
    System.out.println("After");
  }
   @Test
   public void test1() {
    System.out.println("Test 1");
   }

   @Test
   public void test2() {
    System.out.println("Test2");
   }
}

_____________________________________________________________________________
public class JunitTest {
 
   @BeforeClass
   public static void beforeClass() {
     System.out.println("BeforeClass...");
   }
   @AfterClass 
   public static void afterClass() {
     System.out.println("AfterClass...");
   }

   public void before() {
    System.out.println("Before...");
   }
   @After 
   public void after() {
    System.out.println("After...");
   }
}
___________________________________________________________________________



public class DummyTest {
   @BeforeClass
   public static void beforeClass() {
     System.out.println("BeforeClass...");
   }
   @AfterClass 
   public static void afterClass() {
     System.out.println("AfterClass...");
   }

   public void before() {
    System.out.println("Before...");
   }
   @After 
   public void after() {
    System.out.println("After...");
   }


}

__________________________________________________________________________________________
package com.hexaware.trainer;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertEquals;
import org.junit.After;  
import org.junit.AfterClass;  
import org.junit.Before;  
import org.junit.BeforeClass;

import org.junit.Test;


public class DummyTest {
   @BeforeClass
   public static void beforeClass() {
     System.out.println("BeforeClass...");
   }
   @AfterClass 
   public static void afterClass() {
     System.out.println("AfterClass...");
   }

   @Test 
   public void testMe() {
       assertEquals("Hi","Hi");
   }
   public void before() {
    System.out.println("Before...");
   }
   @After 
   public void after() {
    System.out.println("After...");
   }
}



_________________________________________________________________________________



______________________________________________________________________________________

@BeforeClass
   public static void beforeClass() {
     System.out.println("BeforeClass...");
   }
   @AfterClass 
   public static void afterClass() {
     System.out.println("AfterClass...");
   }
   @Before
   public void before() {
    System.out.println("Before...");
   }
   @Test
   public void testSayHello() {
     assertEquals("Hello","Hello");
   }
   @After 
   public void after() {
    System.out.println("After...");
   }
_________________________________________________________________________________________

public class Junit4Test {
  @Test 
  public void test() {
    Assert.assertTrue(false);
  }
  @Test
  public void test2() {
    assert false;
  }
}


________________________________________________________________________________________

 @Test 
   public void testMe() {
       assertEquals("November Batch","Hi","Hi");
   }

    @Test 
   public void testFail() {
       assertEquals("November Batch","Hi","Hello");
   }


