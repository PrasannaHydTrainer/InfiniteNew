Exception handling is mechanism of handling the runtime errors, during execution of the program. 

There are 2 types of errors known as 

1) Compile Time

2) Runtime 

During runtime if we pass invalid values, the type of errors we are getting known as runtime errors. 

By using Exception handling, we can overcome runtime errors. 

To handle errors, we have 3 blocks as

1) try : This block contains statements in which there is possibility of getting runtime error, the statements which are placed in this block are treated as heavy weighted statements as jvm allocates excess memory to them. 

2) catch  : Once exception raises in try block, then the control will be forwarded to catch block, this block contains alternate statement(s) for exception raised in try block, one try block can contains multiple catch blocks. 

3) finally : this block contains statements that needs to be executed mandetorily irrespective of try and catch blocks, this block is not mandetory, but all the statement(s) which are placed in this block are executed as mandetory statement(s) 

try {
...
...
} 
catch (Exception e) {
...
... 
} 
finally {
...
...
...
}

Exception is the top most class, from which all kinds of exceptions are derived. 

printStackTrace() 

There are 2 types of exceptions known as 

1) Checked Exceptions : These are the exceptions that which occurs at compile time, during compilation jvm feels some erroneous code is there and stops the execution at compile time, can be handled at method level by using throws keyword. 

2) Unchecked Exceptions : These are the exceptions that which occurs at runtime can be handled by using try...catch block. 


throw : If you want throw exception objects based on condition, then we need the help of throw keyword. 

System exceptions are inadequate to handle in all situations, then we need the help of custom exceptions, any class, that which derived from Exception can be treated as custom exception. 

any class that which derived from Exception can be treated as custom exception. 

Properties provides an opportunity to protect a field in a class, if you want to define the internal details of particular entity then we need the help of properties. 















